ランダムトーク

・トーク
・チェイントーク（＄次のトーク）
・単語群
・採用条件

☆この辞書で扱う内容のメモ
里々は、（）を呼び出すとランダムトークします。
この時、チェイントークの処理も同時に行ってくれます。

トーク中の（３０）などは、サーフェス指定です。
surfaces.txtで設定した内容（上の例ならsurface30）が表示されます。
うまく表示されない場合はsurfaces.txtを見なおして見てください。

φ、ギリシャ文字ふぁいの小文字は「次の文字を無効化する文字」です。
たとえば、「さんぷるさん（１３）」と書くと、（１３）はサーフェスの変更になってしまいます。
「さんぷるさんφ（１３φ）」と書くと、そのまま表示出来ます。
また、「…」など、replace.txtやreplace_after.txtで文字の置き換え対象になっているものは、
置き換え自体を無効化できます。
φ自体を1つ表示したい場合は、φφです。

＊OnTalk
＞（Ｒ１）	（Ｒ０）
＞ランダムトーク

＃里々の独自イベントです。
＃ランダムトークを自発的にする時、呼ばれます。
＃そのため、最終的には必ず何らかの形で「（）」を呼ぶようにしておきましょう。
＃このテンプレートでは、呼び出し先の「＊ランダムトーク」で「（）」を呼び出しています。

＃最初の「＞（Ｒ１）【タブ】（Ｒ０）」は1行目に書いておくことが推奨されています。
＃書かなくても動き、その場合は以下と同じ動きをします。
＃＊OnTalk
＃＞（Ｒ１）【タブ】（Ｒ０）
＃（）

＊ランダムトーク
＄トーク回数＝（トーク回数）＋１
（）

＃このイベントは、自発的なトークに加えて、
＃メニューの「何か話して」からも呼び出されます。
＃ここでトーク回数をカウントすることで、
＃全トーク回数を記録することが出来ます。
＃個々のトークでカウントすると修正したくなった時に大変なので、
＃このように1箇所にまとめておくことを推奨します。

＃（）でランダムトークが呼び出され、「＄次のトーク」などの予約も処理されます。

＊
＄次のトーク	バラン
：（３６）なんだっけ、お弁当とかに入ってる緑のギザギザ……。
名前が出てこないよ。
：どうしたんですか急に……。

＃「＄次のトーク」にイベント名を入れると、
＃次のランダムトークで、トークの代わりにそのイベントが呼び出されます。（チェイントーク）
＃「＄次から３回目のトーク」にイベント名を入れると、３回目のランダムトークに呼び出されます。
＃「＄次から４回目のトーク」や「＄次から１０回目のトーク」など、好きな数字を入れられます。
＊バラン
：（２）思い出した！　バランだ！
（５）あーすっきりした。
：（１４）まだ考えてたんですか。

＃このイベントは、他のランダムトークの「＄次のトーク」で予約されます。
＃その結果、2つの連続したトーク（チェイントーク）となります。
＊
：（甘いもの）が食べたいなあ。ｗ９ｗ９
あ、（甘いもの）でもいいや。
：φ（食いしん坊ですねφ）

＃（甘いもの）は、このファイルにある単語群「甘いもの」から呼び出されます。
＃「ｗ９」は待ち時間を発生させます。
＃実際には、replace.txtに「ｗ９」を「\w9」に置き換える指示が書いてあります。
＃\w9は0.45秒のウェイトが発生します。\w1で0.05秒、\w3なら0.15秒です。
＃上記のサンプルでは、合わせて0.9秒の待ち時間が発生します。
＠甘いもの
クッキー
チョコレート
ケーキ
＃1行に1つ、単語を入れると、単語の候補となります。
＃この例では、トークに（甘いもの）と書くと、
＃「クッキー」「チョコレート」「ケーキ」のいずれかに置き換わります。
＃また、同一トークで複数回呼び出した場合、トーク内では一巡するまで同じ単語が出ません。
＃この設定は、テンプレートdic_StartEndの「＊OnSatoriLoad」に説明があります。

＊	（トーク回数）＞１０
：そういえば、結構色々話したりしてるよね。
：もっと話したくなるゴーストを目指しましょう。
：（４２）それは（ユーザ名）さんの手腕にかかってるんじゃないかなあ？

＃さとりすとの、「条件」の欄に入っているのが、「採用条件」です。
＃採用条件が成り立つ場合だけ、候補になります。
＃このトークでは、採用条件が「トーク回数が１０より多い」です。
＃条件が成り立つ場合だけ、ランダムトークでこのトークが出現することがあります。
